#cloud-config
coreos:
  update:
    reboot-strategy: "off"
  etcd2:
    name: master
    listen-client-urls: https://0.0.0.0:2379,https://0.0.0.0:4001
    advertise-client-urls: https://PRIVATE_IP:2379,https://PRIVATE_IP:4001
    initial-cluster-token: k8s_etcd
    listen-peer-urls: https://PRIVATE_IP:2380,http://PRIVATE_IP:7001
    initial-advertise-peer-urls: https://PRIVATE_IP:2380
    initial-cluster: master=https://PRIVATE_IP:2380
    initial-cluster-state: new
    # cert
    trusted-ca-file: /etc/kubernetes/ssl/ca.crt
    cert-file: /etc/kubernetes/ssl/admin.pem
    key-file: /etc/kubernetes/ssl/admin-key.pem
    peer-trusted-ca-file: /etc/kubernetes/ssl/ca.crt
    peer-cert-file: /etc/kubernetes/ssl/worker.pem
    peer-key-file: /etc/kubernetes/ssl/worker-key.pem
  flannel:
    interface: $private_ipv4
    etcd_cafile: /etc/kubernetes/ssl/ca.pem
    etcd_certfile: /etc/kubernetes/ssl/etcd-client.pem
    etcd_keyfile: /etc/kubernetes/ssl/etcd-client-key.pem
  units:
    - name: etcd2.service
      command: start

    - name: cfn-etcd-environment.service
      enable: true
      command: start
      runtime: true
      content: |
        [Unit]
        Description=Fetches etcd static IP addresses list from CF
        After=network-online.target

        [Service]
        Restart=on-failure
        RemainAfterExit=true
        ExecStart=/bin/sh -ec "echo ETCD_ENDPOINTS='https://kube-dev-elb-controller-1915140021.eu-west-1.elb.amazonaws.com:2379' > /etc/etcd-environment"

    - name: docker.service
      drop-ins:

        - name: 10-post-start-check.conf
          content: |
            [Service]
            RestartSec=10
            ExecStartPost=/usr/bin/docker pull gcr.io/google_containers/pause-amd64:3.0

        - name: 40-flannel.conf
          content: |
            [Unit]
            Wants=flanneld.service
            [Service]
            EnvironmentFile=/etc/kubernetes/cni/docker_opts_cni.env
            ExecStartPre=/usr/bin/systemctl is-active flanneld.service

        - name: 60-logfilelimit.conf
          content: |
            [Service]
            Environment="DOCKER_OPTS=--log-opt max-size=50m --log-opt max-file=3"
    
    - name: flanneld.service
      drop-ins:
        - name: 10-etcd.conf
          content: |
            [Unit]
            Wants=cfn-etcd-environment.service
            After=cfn-etcd-environment.service

            [Service]
            EnvironmentFile=-/etc/etcd-environment
            Environment="ETCD_SSL_DIR=/etc/kubernetes/ssl"
            EnvironmentFile=-/run/flannel/etcd-endpoints.opts
            ExecStartPre=/usr/bin/systemctl is-active cfn-etcd-environment.service
            ExecStartPre=/bin/sh -ec "echo FLANNELD_ETCD_ENDPOINTS=${ETCD_ENDPOINTS} >/run/flannel/etcd-endpoints.opts"
            ExecStartPre=/usr/bin/etcdctl \
            --ca-file=/etc/kubernetes/ssl/ca.crt \
            --cert-file=/etc/kubernetes/ssl/worker.pem \
            --key-file=/etc/kubernetes/ssl/worker-key.pem \
            --endpoints="${ETCD_ENDPOINTS}" \
            set /coreos.com/network/config '{"Network" : "10.2.0.0/16", "Backend" : {"Type" : "vxlan"}}}'
            TimeoutStartSec=120
        
    - name: kubelet.service
      command: start
      runtime: true
      content: |
        [Unit]
        Wants=flanneld.service cfn-etcd-environment.service
        After=cfn-etcd-environment.service
        [Service]
        EnvironmentFile=-/etc/etcd-environment
        Environment=KUBELET_IMAGE_TAG=v1.5.1+coreos.0
        Environment=KUBELET_IMAGE_URL=quay.io/coreos/hyperkube
        Environment="RKT_RUN_ARGS=--volume dns,kind=host,source=/etc/resolv.conf \
        --set-env=ETCD_CA_CERT_FILE=/etc/kubernetes/ssl/ca.pem \
        --set-env=ETCD_CERT_FILE=/etc/kubernetes/ssl/etcd-client.pem \
        --set-env=ETCD_KEY_FILE=/etc/kubernetes/ssl/etcd-client-key.pem \
        --mount volume=dns,target=/etc/resolv.conf \
        --volume var-lib-cni,kind=host,source=/var/lib/cni \
        --mount volume=var-lib-cni,target=/var/lib/cni \
        --volume var-log,kind=host,source=/var/log \
        --mount volume=var-log,target=/var/log \
        --volume etc-kubernetes,kind=host,source=/etc/kubernetes \
        --mount volume=etc-kubernetes,target=/etc/kubernetes"
        ExecStartPre=/usr/bin/systemctl is-active flanneld.service
        ExecStartPre=/usr/bin/systemctl is-active cfn-etcd-environment.service
        ExecStartPre=/usr/bin/mkdir -p /var/lib/cni
        ExecStartPre=/usr/bin/mkdir -p /var/log/containers
        ExecStartPre=/usr/bin/mkdir -p /opt/cni/bin
        ExecStartPre=/usr/bin/etcdctl \
                       --ca-file /etc/kubernetes/ssl/ca.crt \
                       --key-file /etc/kubernetes/ssl/worker-key.pem \
                       --cert-file /etc/kubernetes/ssl/worker.pem \
                       --endpoints "${ETCD_ENDPOINTS}" \
                       cluster-health

        ExecStartPre=/bin/sh -ec "find /etc/kubernetes/manifests /srv/kubernetes/manifests  -maxdepth 1 -type f | xargs --no-run-if-empty sed -i 's|#ETCD_ENDPOINTS#|${ETCD_ENDPOINTS}|'"
        ExecStart=/usr/lib/coreos/kubelet-wrapper \
        --kubeconfig=/etc/kubernetes/controller-kubeconfig.yaml \
        --require-kubeconfig \
        --cni-conf-dir=/etc/kubernetes/cni/net.d \
        --cni-bin-dir=/opt/cni/bin \
        --network-plugin=cni \
        --container-runtime=docker \
        --rkt-path=/usr/bin/rkt \
        --rkt-stage1-image=coreos.com/rkt/stage1-coreos \
        --node-labels node-role.kubernetes.io/master \
        --register-with-taints=node.alpha.kubernetes.io/role=master:NoSchedule \
        --allow-privileged=true \
        --pod-manifest-path=/etc/kubernetes/manifests \
        --cluster-dns=10.3.0.10 \
        --cluster-domain=cluster.local \
        --cloud-provider=aws
        Restart=always
        RestartSec=10

        [Install]
        WantedBy=multi-user.target

write_files:

  - path: /etc/kubernetes/cni/docker_opts_cni.env
    content: |
      DOCKER_OPT_BIP=""
      DOCKER_OPT_IPMASQ=""

  - path: /opt/bin/host-rkt
    permissions: 0755
    owner: root:root
    content: |
      #!/bin/sh
      # This is bind mounted into the kubelet rootfs and all rkt shell-outs go
      # through this rkt wrapper. It essentially enters the host mount namespace
      # (which it is already in) only for the purpose of breaking out of the chroot
      # before calling rkt. It makes things like rkt gc work and avoids bind mounting
      # in certain rkt filesystem dependancies into the kubelet rootfs. This can
      # eventually be obviated when the write-api stuff gets upstream and rkt gc is
      # through the api-server. Related issue:
      # https://github.com/coreos/rkt/issues/2878
      exec nsenter -m -u -i -n -p -t 1 -- /usr/bin/rkt "$@"

  - path: /etc/kubernetes/ssl/ca.crt
    permissions: 0644
    encoding: gzip+base64
    content: H4sIAEpvd1kAA2WUx86jShCF9zzF3aNfJjix7G6aZDe4ybDDYIPBieTGPP3YV5obNLUqnarFUZ1P9fPzKYh10/4LYdc3NRMBH3/FH46YpqrXCIFyVwJmQlCaFtg7jG+D9/AWFQIEHXmt7plHWaUYQhoAAs0Jq8CBpR1yEBAfSoOY3IIhkTAzqtwmfs7s2RSJn0yOiufoo9kqnUiN2T9aDTziAsapZaKGlKqYFV0RWdd9ZFcfV9CsgQ3Lpq2ai64wAQKKNQAcBOgWfOeo3H16DDg585pTsTDlTcurVCj9ldyyXiP8CBmSk9Avo4d6Uf23VPHS7BZoYW3zZs7XWnKfrO7KKXA8K4V1q1eaPS33EgFytuTdpnK6+DKC8T1moTqYbaNYdioG3uDXdymDkdGX0iOTZ872iykvlXTmn3Cy4ze+RNpzrYyiEOjMRauX513K3jgPYh23hTQF/btY85VAPTgc1YHnsqO7BwGtT6M+KYYxmOR+UbzdPI8R3w73jdyNdGHd1jowC239ItPjVkaVOFbv00mBscGRa2NXmXx4ncmWrfVwuiZQDAXttR/PxCSCZQpw52yrU+HW13pDmtLeMIZu+N3EydMMOUU3TubD20XpTj1eZGERDzdKTRVQAB8yYbkPim/eBl1iraSBPkHz5N62zMusxMpjrvRSmIfn2+sdMPqN1BVqqPbMScAfy//uRpXW0uALFPebqP8DpSNE0dwf2ivp8uHsf+D7unAJhj74uDMWvwnl/osoWH5Qpih1HE/qnzk60btnwaVfpG2/8A9YS7ukX7fC0zr31uYaCaRecXooP8RPFIQ+5t3lvLvJqaPF2zEXY9e9eAsReBOhfiCN1q6nkF+5r0y0u1iXBpNh4c7xaSEOl9h4Rba0SNEQMSlY2SgQaLgR+7XINoLVkBduPnd4MmXVScFbyh6dU5DpOD3OHDgM+WPG1mSspvsMDomieVukXw+L64ht0Q88FNYe5i/9PVo6nQA6pC1462mDw93pyowDxzzVWnUyvGewZtVDT85pcd+6/di8rpWpododR6SSQ3LSbqu31dpb4PVJL4A9sXDocNfNrdnzL8yWwD1nh+OGlWm8RcZTFKScpFb+4n1lBj339/vAtvrnS/kF4T5itW8EAAA=
  
  - path: /etc/kubernetes/ssl/admin.pem
    permissions: 0644
    encoding: gzip+base64
    content: H4sIAExvd1kAA22TudKjSBCEfZ5ifMUf3EIYY3TTCHHfCPAAiUOcEjdPv9ox1tkpq+IrJyMr8+fnO1CUZOOXIDqefJUF4In/wh9Ml2WhPwQBRKMg2AI0i7HCl71DL2DAon6XdSXxKwGB7V8BAq7ugBUVEQpsG4nr44M97kqj3Y1Sh0yIPJHWUbYbnkjpXrGZ1/7L5D9MP/5j69UTPf0rCJC+iIF1VRM6qGKXLGOJHNLXV40rr8iOFLWP5XLJDGCLENoAFYVoAfS9273w3SHQlALL8if96h7uOKIsuNBaFLG+aDKjfe9YHu8OoqVfZ8Km1Jf5prRs0Ypbg9N+y1KdmR2+hfG4ecSsNF9Rr8YOV9+TmZQRddvxxHPxQyndNYdRWWszzbeDl/iCtQXHyACKcOL3NmNxvlENs9B7hlxF4CBFLeITcqQVy0Q80tnSu08mXZPW3ip7YCLgCJwRDmpszni2nhLspLIQ7ue6i1v5ay4ZpvqKTPxema2EwN2fqyK1skvj5XNt7rw4XPdDsoUHQ+SLzKkxFrGXJan5UFsuXFtM13c/5fcMSlT2Yg2teQtbSguTGk6J8BqRogyBea0jr9NC4l6za4zd1sQn2gF388FqLGFMDlEAqwiA95ccAPP7ARGU8JWTZFGKzFxjVZKS55o8qVlgCBcn41WZd1nPDTlmrQ3fKnSHn7vio5kbnuKO8QwUDwzDMY39aU/XEmOtQ3Q+ZOz770kfl5pcYLUnDGcURcl26HaUdZ03cuOzJTG/88uT5M9LJiSnjg6mxasxjzIi8p09qVyjli1+u26t2TJRgLQ/OxfyobDzwVDV83nNuequfXL3tT7HUynN1mIGjoE1Hw7APTmZbtTDIVQO2Fk7nlurWS2cxAXSKR5FXcsAz2iycmMN/GP5LIX0vuqOlfxgjYyOUa6OGzVo1uZUUD2dd4Ke7JaXYJgrEh2/NqsNZSZcruCGt9Xm2eblVqraPp3LDxZMqZw8Rm8sfv/G/hRUNND/S/sP+vMMc9EDAAA=
  
  - path: /etc/kubernetes/ssl/admin-key.pem
    permissions: 0644
    encoding: gzip+base64
    content: H4sIAExvd1kAA22Vt7KjWABEc75icmoKBMIFE2Cu8F7CZdgrvBFG8PX7ZjfdTjvpOtVd/fv3jwQgq9Yvz+d/OZ4a8E/wSwfxX+M3YqoqmHhV4Hld5F3Af3rhyzGlXdz087C+0ZWv76ZzXab+Cmk1kGjl+FnpLJ4Uzya9xMh6shtfRljhZ0OaU5flYiTLWEOb3l82nDpl85KZeUEnrgxusgzM7B+GwD5q2d2YikiRzppcFXtE9gWlzHv0i0x1mJJGNVZph6W2xkfJUta7K/uLaxuvv4oTfWvMexfmRJI1ERneUADG51a2U0sz3CVRy31pgWLMftHHtQCdoPhcvMlwqUrHsSkkPq0LH+46AwulXQYxcL+NDDPhNbLxULb5TF0znNz8vOUbdm2piIdzfeOSA2TJ6bT4Fo7GY891fCpvo24fiNn23eseem87XysvfQ5CWwnT008HTkNb9MXq38V0VYl3eYEff2BLkL/YIiyhy7azTiP1Lf0mPLp0/uuLcWXPU68wFJYxEF5EBnqzbO6aCeu+Ccl0dvFdk852Wj12OEuO5PYE0ehk8a+dO6DsQG/UEkeN8W82aENoYDNGXQT9GaTzM3upPdx9FC8Iz2ecWMBOjSFIGmlE+Y3SCm08T4OfB1BDLdaxmkxDCGhK2/xBH9B2WhJDbJUd0FXH+aIo50KYxueeRQj9SB7Xo1RT4eu9L0hbwZw5U1xfzQHsbxDLWU250ge1jvmhENYy6I503I7AqUfW1+QCecZiAIIEb5ricK3BhMeJ+lAyKXFQNo6QGE6JK760XdcHEsyuFiUjj+4ld5b53FBXJAJkvfFAhDHgCfjw79uGm2qNeppyMvJzcN8hmF712hLze67ayxhujmecgMX1+8JmKCLKwRElFz/gwIBaMaxEnpxrq2ZvYsPVu91T0zTcC36+yMsHvevTq2un/fDI0vmG5Sei10lg4woeRX3RpeZ04p3YDJAiwEq4sVs6Nr7KTf+0pI0m/cEup45o7fbfxHiUKwjhEaNarleSHIc7WtH1sIjOgvvNFi/5YgR7xGmdCaWPqsdZOcHsDYTUkwV0wxxScnwE7/P95TVsocuHSLqe3M9xvFtd0RSqWdOQu0KqImErv0O/kejLUDDco2nBNjlKutwHQn5FlvSFb65WTt6X7x6TqtRoiJX6QQaVbhoXmjj+i0yYQWsym3JOhi19npo1qjJCFyDahtGVhk0CJnW3+H1WAHBtuIxWJdKVanhO794W/XUSpo8rn31A6aF6QO5LDIaM3Jj0s0vKiRXWjb5e84GZ26KWTThFm/O9nO8a1ljPuf0+jLcK2rxlfQnLI12pj7lDIBDfNIJGcqszmC5jNqj0MpLW+NsL3kk5XJHezXD1WdNcLR3JZpds2y7RqIUzgP2ZOouMqzk3c+gmEi5/JownFmK80WpjyjTuTLVAfZtmnQ6yg04i8KEfBCKLA7EByrPyHNlH7rl45Z99HRnjirskn28LeQiCUJDXZM6aK+za8XlV6lln8/5433s6UR4Da9RkiAK/PBAbAOp0dQG6kpoSkMmCoHm9PsS2fhrfm6c+rJ2tkG/kMsMSFt1qBrYaCjeOg2FmFhkSvV11fkVjnpm4XpdgFrD9qUb6W1VqKvgyY7h7ysa88ldOA9qKzt0+YQs3GCc9RRA2Iqf8iZGPq+qfQ4XBMqdxk+WGzIMnU9+Pp0OknQgKxxq1r+efxNSnhe/++YP8eyvAkv7/bv4B0YGCXI8GAAA=
  
  - path: /etc/kubernetes/ssl/worker.pem
    permissions: 0644
    encoding: gzip+base64
    content: H4sIAEtvd1kAA2XTuZKrSBQEUJ+vGJ/oAEQ3COMZBVXFDs0u8EAIxL6KRV8/3c8YZ9I86dyIG/nx8RMRyar1j4RcX8WqBHz0ix+EqarSCCUJxLskOZJol0tFbWcPfWCJZTM9m0oWdloEToABBJ7pgh2WMQwdB6I9n4k80lojsp6m+HmDPmJNeD8tH11Mvzysdvgx9a+Z7/9sxzUKTFGVARMgAuy7kbJhlXgMm7HanNzUvSxRZQJalrxJ9tSMhQ76vQCAT1WEO/jtdTCoPwZDQvAKc3nS0QWww36gumu81m/ZNFyX7ysy2KbuVmCM7032tzbiqUiFZbJP79ucq70U8MTVZPe8wvPhtK2dv0a6fmjeMVFG0Hpca8NiWVmvoKchNzlxH/xi7hDLGmqMx68eygPhAkHihUX0MGcHQ00NIcelUcXTCxmgs8dotPA6maMu6bvJZAccU24OturepJTfMd/EF9YxD4xHpZD+WFN5Kbg1SqwjlcKZPLV2TK2jPAztzVQZ6S1vNlKqZ7u6eKtnmSQ54p3tdEkLugAMGvVnVnTDuYAkPQpFfojZAN9oAS915W04CSO9ZkkgFhHPG2Cm6XPBhMR64pd28TVWWb4kN8LpmIDSFAFAO3RiTR8S9bndLeAgLDoA/nxABBYk+S6pFxSyRIcMCz5ag3lvzaKX22nH3yaf1RH/TFsdTRb5TGONmg8y5sToIr2O0BG244zdgPemeSHS3oLywwwfPLvltko50TyRQ8+5RZ43Dr6FzZXr9byHJoB2xxX6pRicq/rO0KuJ2CMkOLqogoi7akp325Clz7M9PM96FmkRXwPlrtBY4df6QjMuNZcNNHct1uMSNIzdD8a9IK6ru1kpnj7Xq8ur+k3C873m7lVTbREzDXdZaXw1mCnGCpmbYDO3T2n/To7hEQw2p9E14Y6Zl2OU5HGJkTPe1vmBnBes0eWlvQxY+JeoWBqDOgSv4xZtdW6dZX1xBz8Dm2z9iUCp0L8Ullda8w/xd6DIgv8f7b99dGaL0QMAAA==
  
  - path: /etc/kubernetes/ssl/worker-key.pem
    permissions: 0644
    encoding: gzip+base64
    content: H4sIAE1vd1kAA22Vt7KkVgAFc75ic2oLGHyg4AIXBu9hIMMMDAyeh/16raRUJz1JVyf9+/efCVBRrV+eD345nhqBAP7SYfLP8RsxVRVOQBUA0EXgQkBU4XAbain/1BZjmp5KT3AK6fLR5bmECSJPq/TiikzBnl+WjjYEIxpAKYW+Egzpa0dnY5LFPZNPxoVaGgz5XKpkE67ZfhFauE1BTbJGiQ+8Pj8Duy50BJIM/bH461KE7J0e5wxdx92wHISfd9vpKsbI763vxo03nE4wp9PTAy/PWt2vm1WyYoRzmXibCYMaNGXH6Z8A9fzP+xDJ8YN9mQQjEydMTiUo4rrLsLVJs7gtEtO/Cj7pse+CmDzxocY0D72cYs5939YHZ6mW4++uyAsa15P0bC5AidfXeQ51zADuNIDRGO+7ZvasRIz4EYEXsaHXofOWuQjuD16//fJ7lSdru9/oE8+xq0rABQIY/8h2xcZ5+64FQMYNc4pMnULdmQ4s6ron5UtL1pvVQJ74UZgujVaIPwFopeOHrUInuKz1wpZDcUeXTcw5SvkZcc9oh15nUGslF8+n1jaFzFIgi2xJhjekDYII58sR94ZaAeq/vnsf7kcZ9Cv9aubvhIALr+aT1jDbtxsdr95o485iJMt899nWaV9yP31yxZhE5nQIgnNcsKeA8mS3dXEpRkfeISOSPpwS3ybz2U8UK6uee1pJAWuqYZy87qLSk3yP2hWSLKgiRUC11U0U4Vnud3EiX4XMLema8uJ4apPPrYXJDEfNUhardsJxKD0a8bRM2xtB1H0gfXRcZlCO7CRG2s0Ph7D7z+5Y4x/DigCcJ3uZtiAmOj49+tv7jiqZ2W722lAPDjID7MY6FUndTckGbacIbYQ4l+fv6/QdvB9FKZMdb7jXLJnNm4y4pjx9PglgnrEoIFGN6A8jHiIQJoEROVC8ieyLMNJisE0GYqvexvJmvoMY6vtgJ7zNf5Zww1hXi0zlR6jzs/V1IxCCz00d/L/EtpYi15XLJcdEdtPFt4HPm+DUT+s1G5jBvWxaLmc91jD8BlKyM4CsivhzuKl4UochChYvIsxye+tnhEGYvY22rk8s97LCfb646stP7p6mp+s7idvDH+tG7Q5OvqD3p9oKIiHABCJUOEt8vJMPuiwTx+PcCi/skMNmAi3rJPI0omWn5rT+QyaCh4gq/SbrpVOKUB8l5MbuKinDPZk1VWd6OF8v62LDO98fc/izj3rWNUET6qG13cA7YL0eEWSo+0nNj73hTOTVVNy9pRG+C5hOKRC62EN3iHFf1RMnhECDYu8XtQe9Z9SMBsx7q106PWvjV4qC+kYskTZEtWMdR9XzNiKha2WC2Zx/kIE1pjWpcjEt9mMClmWzB/eNwnN1Bwy3H9UVDCtSuNhxCjMEVJ8ceQ5a1Lg22fK6vWMv56PPL34Dy/ltXcIZNnTrWXNMWstt4aamw14jyU0NZ5CZuoduyQMXXG4meoWSUyposyyT/aVd6eV8akNNgAIbmdfSCHgdyj7h0k6JIkNFqusainUCXrrRF22QxVQWbDhBN/G058qtfh+luuJs0MhDJbDE9WJGGtSO3V47lJCGot49UIhPEb2X1XkzTWrZ6azkFnC5zsAqJ/Ay+jEPuid+2GLDZOfFCbPKsmzkBUyNoMRzym02Nlm/859SpY72A6N2kueVGr92LGSbiqZVK6IWUd2zXoFcuR1//YX8mxVoSf+fm78BO2jhqo8GAAA=
  
  - path: /etc/kubernetes/controller-kubeconfig.yaml
    content: |
        apiVersion: v1
        kind: Config
        clusters:
        - name: local
          cluster:
            server: http://localhost:8080
        users:
        - name: kubelet
        contexts:
        - context:
            cluster: local
            user: kubelet
          name: kubelet-context
        current-context: kubelet-context


  - path: /etc/kubernetes/cni/net.d/10-flannel.conf
    content: |
        {
            "name": "podnet",
            "type": "flannel",
            "delegate": {
                "isDefaultGateway": true
            }
        }